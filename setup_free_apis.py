#!/usr/bin/env python3
"""
Setup Guide for Free Tier APIs
‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á APIs ‡∏ü‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AI Content Factory
"""

def setup_google_trends():
    """‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Google Trends (‡∏ü‡∏£‡∏µ)"""
    print("1. Google Trends (‡∏ü‡∏£‡∏µ - ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á API key)")
    print("=" * 50)
    print("pip install pytrends")
    print()
    
    sample_code = '''
# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Google Trends
from pytrends.request import TrendReq
import pandas as pd

def get_trending_topics():
    pytrends = TrendReq(hl='en-US', tz=360)
    
    # ‡∏î‡∏π trending searches
    trending_searches = pytrends.trending_searches(pn='thailand')
    print("Trending in Thailand:", trending_searches.head(10))
    
    # ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• keyword specific
    pytrends.build_payload(['AI', 'ChatGPT', 'Technology'], 
                          cat=0, timeframe='today 3-m', geo='TH', gprop='')
    interest_over_time = pytrends.interest_over_time()
    return interest_over_time

# ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
trends = get_trending_topics()
'''
    
    with open('google_trends_example.py', 'w', encoding='utf-8') as f:
        f.write(sample_code)
    
    print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå google_trends_example.py")
    print("‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î: Rate limiting, ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ß‡∏±‡∏á IP blocking")

def setup_youtube_api():
    """‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á YouTube Data API (‡∏ü‡∏£‡∏µ 10,000 requests/‡∏ß‡∏±‡∏ô)"""
    print("\n2. YouTube Data API v3 (‡∏ü‡∏£‡∏µ 10,000 requests/‡∏ß‡∏±‡∏ô)")
    print("=" * 50)
    print("Steps:")
    print("1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://console.cloud.google.com/")
    print("2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Project ‡πÉ‡∏´‡∏°‡πà")
    print("3. ‡πÄ‡∏õ‡∏¥‡∏î YouTube Data API v3")
    print("4. ‡∏™‡∏£‡πâ‡∏≤‡∏á API Key")
    print("5. pip install google-api-python-client")
    print()
    
    sample_code = '''
# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô YouTube API
from googleapiclient.discovery import build
import os

def get_youtube_trending():
    api_key = os.getenv('YOUTUBE_API_KEY')
    youtube = build('youtube', 'v3', developerKey=api_key)
    
    # ‡∏î‡∏π trending videos
    request = youtube.videos().list(
        part='snippet,statistics',
        chart='mostPopular',
        regionCode='TH',
        maxResults=50
    )
    
    response = request.execute()
    
    trending_videos = []
    for item in response['items']:
        video_data = {
            'title': item['snippet']['title'],
            'views': int(item['statistics']['viewCount']),
            'likes': int(item['statistics'].get('likeCount', 0)),
            'category': item['snippet']['categoryId']
        }
        trending_videos.append(video_data)
    
    return trending_videos

# ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
videos = get_youtube_trending()
'''
    
    with open('youtube_api_example.py', 'w', encoding='utf-8') as f:
        f.write(sample_code)
    
    print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå youtube_api_example.py")

def setup_groq_api():
    """‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Groq API (‡∏ü‡∏£‡∏µ tier)"""
    print("\n3. Groq API (‡∏ü‡∏£‡∏µ tier)")
    print("=" * 50)
    print("Steps:")
    print("1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://console.groq.com/")
    print("2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ")
    print("3. ‡∏™‡∏£‡πâ‡∏≤‡∏á API Key")
    print("4. pip install groq")
    print()
    
    sample_code = '''
# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Groq API
from groq import Groq
import os

def analyze_trend_with_groq(trend_data):
    client = Groq(api_key=os.getenv('GROQ_API_KEY'))
    
    prompt = f"""
    ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå trend ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤:
    
    Topic: {trend_data['topic']}
    Views: {trend_data.get('views', 'N/A')}
    
    ‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON:
    {{
        "content_angles": ["‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á 1", "‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á 2", "‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á 3"],
        "target_audience": "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢",
        "estimated_engagement": "‡∏™‡∏π‡∏á/‡∏Å‡∏•‡∏≤‡∏á/‡∏ï‡πà‡∏≥",
        "suggested_format": "‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠/‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°/‡πÇ‡∏û‡∏™‡∏ï‡πå",
        "hashtags": ["#tag1", "#tag2", "#tag3"]
    }}
    """
    
    completion = client.chat.completions.create(
        model="llama3-8b-8192",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7,
        max_tokens=1000
    )
    
    return completion.choices[0].message.content

# ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
trend = {"topic": "AI Tools 2024", "views": 150000}
analysis = analyze_trend_with_groq(trend)
'''
    
    with open('groq_api_example.py', 'w', encoding='utf-8') as f:
        f.write(sample_code)
    
    print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå groq_api_example.py")

def setup_openai_api():
    """‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á OpenAI API (pay-per-use, ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å)"""
    print("\n4. OpenAI API (pay-per-use, ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô $5)")
    print("=" * 50)
    print("Steps:")
    print("1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://platform.openai.com/")
    print("2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ")
    print("3. ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô $5 (‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î)")
    print("4. ‡∏™‡∏£‡πâ‡∏≤‡∏á API Key")
    print("5. pip install openai")
    print()
    
    sample_code = '''
# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô OpenAI API
from openai import OpenAI
import os

def generate_content_script(topic, angle):
    client = OpenAI(api_key=os.getenv('OPENAI_API_KEY'))
    
    prompt = f"""
    ‡∏™‡∏£‡πâ‡∏≤‡∏á script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ YouTube ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß 3-5 ‡∏ô‡∏≤‡∏ó‡∏µ:
    
    ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: {topic}
    ‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á: {angle}
    
    ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö script:
    1. Hook (15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏£‡∏Å)
    2. ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å (3-4 ‡∏ô‡∏≤‡∏ó‡∏µ)
    3. Call to Action (30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢)
    
    ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö YouTube algorithm
    """
    
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7,
        max_tokens=1500
    )
    
    return response.choices[0].message.content

# ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
script = generate_content_script("AI Tools 2024", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ AI ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á")
'''
    
    with open('openai_api_example.py', 'w', encoding='utf-8') as f:
        f.write(sample_code)
    
    print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå openai_api_example.py")

def update_env_file():
    """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå .env"""
    print("\n5. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå .env")
    print("=" * 50)
    
    env_content = '''# AI Content Factory Environment Variables
DATABASE_URL=sqlite:///content_factory.db

# Free Tier API Keys
YOUTUBE_API_KEY=your_youtube_api_key_here
GROQ_API_KEY=your_groq_api_key_here

# Pay-per-use APIs (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡πâ‡∏≠‡∏¢)
OPENAI_API_KEY=your_openai_api_key_here

# Google Trends (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á API key)
# ‡πÉ‡∏ä‡πâ pytrends library ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á

# Flask Settings
FLASK_ENV=development
FLASK_PORT=5000
'''
    
    with open('.env.example', 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå .env.example ‡πÅ‡∏•‡πâ‡∏ß")
    print("üìù ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô .env ‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà API keys ‡∏à‡∏£‡∏¥‡∏á")

def create_requirements():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á requirements.txt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö APIs"""
    requirements = '''# AI Content Factory - API Dependencies
flask==3.1.2
requests==2.31.0
python-dotenv==1.0.0
sqlite3

# Data Sources (‡∏ü‡∏£‡∏µ)
pytrends==4.9.2
google-api-python-client==2.108.0

# AI Services
groq==0.4.1
openai==1.3.7

# Optional (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö advanced features)
beautifulsoup4==4.12.2
pandas==2.1.4
matplotlib==3.8.2
'''
    
    with open('requirements_with_apis.txt', 'w', encoding='utf-8') as f:
        f.write(requirements)
    
    print("\n‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå requirements_with_apis.txt")
    print("üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢: pip install -r requirements_with_apis.txt")

def main():
    """‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£ setup ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    print("üÜì Free Tier APIs Setup Guide")
    print("=" * 60)
    print("‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ APIs ‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å")
    print()
    
    setup_google_trends()
    setup_youtube_api()
    setup_groq_api()
    setup_openai_api()
    update_env_file()
    create_requirements()
    
    print("\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢:")
    print("üí∞ Google Trends: ‡∏ü‡∏£‡∏µ")
    print("üí∞ YouTube API: ‡∏ü‡∏£‡∏µ (10,000 requests/‡∏ß‡∏±‡∏ô)")
    print("üí∞ Groq API: ‡∏ü‡∏£‡∏µ tier")
    print("üí∞ OpenAI API: ~200-500 ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡πÉ‡∏ä‡πâ‡∏ô‡πâ‡∏≠‡∏¢)")
    print("üí∞ ‡∏£‡∏ß‡∏°: 200-500 ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô")
    
    print("\nüéØ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:")
    print("1. ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏≠‡∏≤ API keys ‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô .env")
    print("2. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies: pip install -r requirements_with_apis.txt")
    print("3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö APIs ‡∏î‡πâ‡∏ß‡∏¢‡πÑ‡∏ü‡∏•‡πå example")
    print("4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ real data")

if __name__ == "__main__":
    main()